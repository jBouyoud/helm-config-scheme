name: ci

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Run the sh-checker
        uses: luizm/action-sh-checker@v0.1.9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SHELLCHECK_OPTS: -x
        with:
          sh_checker_comment: true
          sh_checker_exclude: 'tests'
          sh_checker_checkbashisms_enable: true

  unit-tests:
    needs: [lint]
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest] # [dash, zsh, bash]
        container: [~]
        include:
          - os: ubuntu-latest
            container: alpine # ash
          - os: ubuntu-latest
            container: centos:8 # bash
    steps:
      - name: Install dependencies
        if: "!contains(matrix.os, 'windows-latest')"
        run: |-
          if command -v apk > /dev/null; then
            apk add --no-cache bash git
          elif command -v yum > /dev/null; then
            yum install -y git-core unzip
          fi

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Helm
        uses: azure/setup-helm@v1

      - name: Install bats (*nix)
        if: "!contains(matrix.os, 'windows-latest')"
        run: |-
          mkdir -p "$GITHUB_WORKSPACE/bin"
          echo "$GITHUB_WORKSPACE/bin/" >> $GITHUB_PATH

          tests/bats/core/install.sh "$GITHUB_WORKSPACE"

      - name: Print Environment (*nix)
        if: "!contains(matrix.os, 'windows-latest')"
        run: |-
          echo "Shell: $(readlink /bin/sh || readlink /var/select/sh)"
          helm version
          bats -v

      - name: Print Environment (windows)
        if: "contains(matrix.os, 'windows-latest')"
        run: |-
          helm version
          bash tests/bats/core/bin/bats -v

      - name: helm plugin install
        run: helm plugin install .

      - name: tests/unit (*nix)
        if: "!contains(matrix.os, 'windows-latest')"
        run: |
          bats --tap -r tests/unit

      - name: tests/unit (windows)
        if: "contains(matrix.os, 'windows-latest')"
        run: |
          $env:W_TEMP=$env:TEMP; bash tests/bats/core/bin/bats --tap -r tests/unit

  integration-tests:
    needs: [unit-tests]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: engineerd/setup-kind@v0.5.0
      - run: |
          kubectl cluster-info
          kubectl api-resources

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Helm
        uses: azure/setup-helm@v1

      - name: Install dependencies
        run: |-
          mkdir -p "$GITHUB_WORKSPACE/bin"
          echo "$GITHUB_WORKSPACE/bin/" >> $GITHUB_PATH

          tests/bats/core/install.sh "$GITHUB_WORKSPACE"

      - name: Print Environment
        run: |-
          echo "Shell: $(readlink /bin/sh || readlink /var/select/sh)"
          helm version
          bats -v

      - name: helm plugin install
        run: helm plugin install .

      - run: bats --tap -r tests/it
